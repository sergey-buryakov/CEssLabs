// An empty list:
//
// Node*
// +------+
// | head |-->nullptr
// +------+
//
//
//
// A list with two elements:
//
// Node*
//Node
//Node
// +------+ +-----+
//+-----+
// | head |-->|value| +-->|value|
// +------+ +-----+ | +-----+
//
|next |--+ |next |-->nullptr
//
+-----+
+-----+
//

#include <iostream>

using namespace std;

class Node
{
public:
    Node(int val);
    int value;
    Node* next;
};

Node::Node(int val) : value(val), next(nullptr){}

class List
{
public:
    List();
    void push_front(int value);
    bool pop_front(int &value);
private:
    Node* head;
};

List::List() : head(nullptr){}

void List::push_front(int value)
{
    Node* new_head = new Node(value);
    new_head->next = head;
    head=new_head;
}

bool List::pop_front(int &value)
{
    if(head)
    {   value = head->value; // extract the result
        Node* tmp = head; // save this so we can delete it
        head = head->next; // move the head forward to the next item
        delete tmp;
        return true;
    }
    return false;
}

int main()
{
    List list;
    //
    list.push_front(1);
    list.push_front(2);
    list.push_front(3);
    list.push_front(4);

    int value = 0;
    while (list.pop_front(value))
    {
        cout << value << endl;
    }
    return 0;
}
